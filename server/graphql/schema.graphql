type Query {
  product(id: ID!): Product!
  products: [Product!]!
  me: User
  cart(username: String!): Cart
}
type Mutation {
  createProduct(product: createProductInput!): Product!
  updateProduct(product: updateProductInput!): Product!
  deleteProduct(id: ID!): ID!
  register(username: String!, password: String!, permission: String!): User
  login(username: String!, password: String!): User
  createCart(username: String!): Cart
  updateCart(products: [updateCartInput]!, username: String!): Cart
}

enum Orientation {
  NONE
  MASCULINE
  FEMININE
  UNISEX
}

enum ClothingType {
  NONE
  SHORTS
  PANTS
  TSHIRT
  JACKET
  UNDERWEAR
}

type Cart {
  products: [Product]
  username: String!
}

type Product {
  id: ID!
  name: String!
  price: Float!
  description: String!
  image: String!
  orientation: Orientation!
  clothingType: ClothingType!
}

input createProductInput {
  name: String!
  price: Float!
  description: String!
  image: String!
  orientation: Orientation!
  clothingType: ClothingType!
}

input updateProductInput {
  id: ID!
  name: String!
  price: Float!
  description: String!
  image: String!
  orientation: Orientation!
  clothingType: ClothingType!
}
input updateCartInput {
  name: String!
  price: Float!
  description: String!
  image: String!
  orientation: Orientation!
  clothingType: ClothingType!
  size: ClothingSizes!
}

enum ClothingSizes {
  XS
  S
  M
  L
  XL
  XXL
  XXXL
}

type User {
  username: String!
  password: String!
  token: String
  permission: PermissionType
}

enum PermissionType {
  ADMIN
  BASIC
}
